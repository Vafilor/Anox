/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedTimestampsIndexImport } from './routes/_authenticated/timestamps/index'
import { Route as AuthenticatedTimeEntriesIndexImport } from './routes/_authenticated/time-entries/index'
import { Route as AuthenticatedTasksIndexImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedTagsIndexImport } from './routes/_authenticated/tags/index'
import { Route as AuthenticatedStatisticsIndexImport } from './routes/_authenticated/statistics/index'
import { Route as AuthenticatedRecordsIndexImport } from './routes/_authenticated/records/index'
import { Route as AuthenticatedNotesIndexImport } from './routes/_authenticated/notes/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTimestampsIndexRoute =
  AuthenticatedTimestampsIndexImport.update({
    path: '/timestamps/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedTimeEntriesIndexRoute =
  AuthenticatedTimeEntriesIndexImport.update({
    path: '/time-entries/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexImport.update({
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedTagsIndexRoute = AuthenticatedTagsIndexImport.update({
  path: '/tags/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedStatisticsIndexRoute =
  AuthenticatedStatisticsIndexImport.update({
    path: '/statistics/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedRecordsIndexRoute = AuthenticatedRecordsIndexImport.update({
  path: '/records/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedNotesIndexRoute = AuthenticatedNotesIndexImport.update({
  path: '/notes/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/notes/': {
      preLoaderRoute: typeof AuthenticatedNotesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/records/': {
      preLoaderRoute: typeof AuthenticatedRecordsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/statistics/': {
      preLoaderRoute: typeof AuthenticatedStatisticsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tags/': {
      preLoaderRoute: typeof AuthenticatedTagsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/tasks/': {
      preLoaderRoute: typeof AuthenticatedTasksIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/time-entries/': {
      preLoaderRoute: typeof AuthenticatedTimeEntriesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/timestamps/': {
      preLoaderRoute: typeof AuthenticatedTimestampsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AuthenticatedRoute.addChildren([
    AuthenticatedIndexRoute,
    AuthenticatedNotesIndexRoute,
    AuthenticatedRecordsIndexRoute,
    AuthenticatedStatisticsIndexRoute,
    AuthenticatedTagsIndexRoute,
    AuthenticatedTasksIndexRoute,
    AuthenticatedTimeEntriesIndexRoute,
    AuthenticatedTimestampsIndexRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */
